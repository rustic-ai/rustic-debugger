export interface NavigationStructure {
  // Root structure
  categories: NavigationCategory[];
  maxDepth: number;              // Maximum nesting level

  // Behavior
  collapsible: boolean;          // Whether sections can be collapsed
  searchable: boolean;           // Whether navigation is searchable

  // Generation
  autoGenerated: boolean;        // Whether generated from content structure
  lastGenerated: Date;           // When navigation was last built
}

export interface NavigationCategory {
  id: string;                    // Category identifier
  title: string;                 // Display title
  description?: string;          // Category description
  icon?: string;                 // Category icon
  order: number;                 // Display order

  // Hierarchy
  sections: NavigationSection[]; // Child sections
  pages: NavigationPageRef[];    // Direct child pages

  // Behavior
  expanded: boolean;             // Default expansion state
  badge?: NavigationBadge;       // Optional badge (New, Updated, etc.)
}

export interface NavigationSection {
  id: string;                    // Section identifier
  title: string;                 // Display title
  description?: string;          // Section description
  order: number;                 // Display order within category

  pages: NavigationPageRef[];    // Pages in this section
  subsections?: NavigationSection[]; // Nested subsections

  // Behavior
  expanded: boolean;             // Default expansion state
  badge?: NavigationBadge;
}

export interface NavigationPageRef {
  id: string;                    // Page identifier
  title: string;                 // Display title
  path: string;                  // URL path
  order: number;                 // Display order

  // Metadata
  description?: string;          // Page description
  lastModified?: Date;           // Last modification date
  estimatedReadTime?: number;    // Reading time in minutes

  // Status
  isDraft?: boolean;             // Whether page is draft
  isNew?: boolean;               // Whether page is newly added
  isUpdated?: boolean;           // Whether page was recently updated

  // Behavior
  badge?: NavigationBadge;
  children?: NavigationPageRef[]; // Child pages
}

export interface NavigationBadge {
  text: string;
  variant: 'new' | 'updated' | 'beta' | 'deprecated' | 'draft';
  color?: string;
}

export interface BreadcrumbNavigation {
  items: BreadcrumbItem[];
  separator: string;
}

export interface BreadcrumbItem {
  title: string;
  path: string;
  isActive: boolean;
}

export interface TableOfContents {
  items: TOCItem[];
  maxDepth: number;
  activeHeading?: string;
}

export interface TOCItem {
  id: string;
  text: string;
  level: number;
  anchor: string;
  children?: TOCItem[];
  isActive?: boolean;
}

export interface NavigationSearch {
  query: string;
  results: NavigationSearchResult[];
  totalResults: number;
  categories: string[];          // Filter by categories
  sections: string[];            // Filter by sections
}

export interface NavigationSearchResult {
  type: 'page' | 'section' | 'heading';
  id: string;
  title: string;
  path: string;
  excerpt?: string;
  category: string;
  section?: string;
  relevanceScore: number;
  highlights: SearchHighlight[];
}

export interface SearchHighlight {
  field: 'title' | 'content' | 'description';
  value: string;
  startIndex: number;
  endIndex: number;
}

export interface PaginationNavigation {
  previousPage?: NavigationPageRef;
  nextPage?: NavigationPageRef;
  currentPage: NavigationPageRef;
  totalPages?: number;
  pagesInSection?: NavigationPageRef[];
}

export interface MobileNavigation {
  isOpen: boolean;
  overlay: boolean;
  hamburgerMenu: boolean;
  swipeGestures: boolean;
  breakpoint: number;            // Pixel width for mobile behavior
}

export interface NavigationState {
  currentPage: string;           // Current page ID
  expandedCategories: string[];  // Expanded category IDs
  expandedSections: string[];    // Expanded section IDs
  searchQuery: string;
  searchResults: NavigationSearchResult[];
  mobileMenuOpen: boolean;
}

export interface NavigationConfig {
  maxDepth: number;
  defaultExpanded: boolean;
  searchEnabled: boolean;
  breadcrumbsEnabled: boolean;
  tocEnabled: boolean;
  tocMaxDepth: number;
  mobileBreakpoint: number;
  analytics: {
    trackClicks: boolean;
    trackSearch: boolean;
    trackExpansion: boolean;
  };
}

export interface NavigationAccessibility {
  ariaLabels: {
    mainNavigation: string;
    breadcrumb: string;
    tableOfContents: string;
    search: string;
    mobileMenu: string;
  };
  keyboardShortcuts: {
    openSearch: string;
    toggleMobileMenu: string;
    nextPage: string;
    previousPage: string;
  };
  skipLinks: NavigationSkipLink[];
}

export interface NavigationSkipLink {
  target: string;
  text: string;
  order: number;
}